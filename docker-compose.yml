name: ExpenseTracker

services:
  kong:
    image: kong
    container_name: kong27
    ports:
      - "8000:8000"   # Proxy
      - "8443:8443"   # Proxy TLS
      - "8001:8001"   # Admin API
      - "8444:8444"   # Admin API TLS
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_LOG_LEVEL=debug
      - KONG_PLUGINS=auth
      - KONG_LUA_PACKAGE_PATH=/usr/local/share/lua/5.1/?.lua
    volumes:
      - ./kong/config:/usr/local/kong/declarative
      - ./kong/plugins:/usr/local/share/lua/5.1/kong/plugins/

  postgres:
    image: postgres
    container_name: postgres27
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis
    container_name: redis27
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka
    container_name: kafka27
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

  userservice:
    image: userservice
    container_name: userService27
    ports:
        - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  authservice:
    image: authservice
    container_name: authService27
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  insightservice:
    image: insightservice
    container_name: insightService27
    env_file:
      - /home/tanishq/PycharmProjects/InsightService/.env
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
  
  expenseservice:
    image: expenseservice
    container_name: expenseService27
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    
volumes:
  postgres_data:
